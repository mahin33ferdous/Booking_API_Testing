{
	"info": {
		"_postman_id": "fffe09ca-1ecd-4c11-bb8a-b17fa9528ea2",
		"name": "Batech20",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28605308",
		"_collection_link": "https://cloudy-meadow-314617.postman.co/workspace/mahinItTraining~3026e037-d744-4a67-be0f-4e36af66689c/collection/28605308-fffe09ca-1ecd-4c11-bb8a-b17fa9528ea2?action=share&source=collection_link&creator=28605308"
	},
	"item": [
		{
			"name": "BookingAdd",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName= pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"console.log(\"Firstname: \" + firstName)\r",
							"\r",
							"\r",
							"var lastName= pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"console.log(\"Lastname: \" + lastName)\r",
							"\r",
							"var totalprice=pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalprice\",totalprice)\r",
							"\r",
							"var depositpaid=pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositpaid\",depositpaid)\r",
							"\r",
							"var additionalneeds=pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"additionalneeds\", additionalneeds)\r",
							"\r",
							"\r",
							"//var checkin =pm.variables.replaceIn(\"{{}}\")\r",
							"\r",
							"const moment =require('moment')\r",
							"const today=moment()\r",
							"console.log(today.format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.add(5,'d').add(3,'M').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkIn\",today.add(5,'d').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkOut\",today.add(5,'d').add(3,'M').format(\"YYYY-MM-DD\"))\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=pm.response.json()\r",
							"\r",
							"pm.environment.set(\"id\",jsonData.bookingid)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstName}}\",\r\n    \"lastname\": \"{{lastName}}\",\r\n    \"totalprice\": {{totalprice}},\r\n    \"depositpaid\": {{depositpaid}},\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkIn}}\",\r\n        \"checkout\": \"{{checkOut}}\"\r\n    },\r\n    \"additionalneeds\": \"{{additionalneeds}}\"\r\n}\r\n"
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BookingView",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statuaCode=pm.response.code\r",
							"console.log(statuaCode)\r",
							"\r",
							"if(statuaCode==200){\r",
							"var jsonData=pm.response.json()\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"// pm.test(\"Your test name\", function () {\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData.value).to.eql(100);\r",
							"// });\r",
							"\r",
							"pm.test(\"first name\",function(){\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"\r",
							"});\r",
							"pm.test(\"lastname validate\",function(){\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"});\r",
							"\r",
							"pm.test(\"totalprice validation\",function(){\r",
							"\r",
							"  pm.expect(jsonData.totalprice).to.eql(parseInt(pm.environment.get(\"totalprice\")))\r",
							"})\r",
							"\r",
							"pm.test(\"depositpaid\",function(){\r",
							"    pm.expect(String(jsonData.depositpaid)).to.eql(pm.environment.get(\"depositpaid\"))\r",
							"})\r",
							"\r",
							"pm.test(\"bookingdates checkin validation\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkIn\"))\r",
							"})\r",
							"pm.test(\"booking checkout validation\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkOut\"))\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"additionalneeds validation\",function(){\r",
							"    pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalneeds\"))\r",
							"})\r",
							"}\r",
							"else if(statuaCode==404)\r",
							"{\r",
							"    pm.test(\"Not found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"}\r",
							"else{\r",
							"    pm.test(\"someting else\",function(){\r",
							"    \r",
							"    })\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateAuth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonAuth=pm.response.json()\r",
							"\r",
							"pm.environment.set(\"token\",jsonAuth.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateBooking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName= pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"console.log(\"Firstname: \" + firstName)\r",
							"\r",
							"\r",
							"var lastName= pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"console.log(\"Lastname: \" + lastName)\r",
							"\r",
							"var totalprice=pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalprice\",totalprice)\r",
							"\r",
							"var depositpaid=pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositpaid\",depositpaid)\r",
							"\r",
							"var additionalneeds=pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"additionalneeds\", additionalneeds)\r",
							"\r",
							"\r",
							"//var checkin =pm.variables.replaceIn(\"{{}}\")\r",
							"\r",
							"const moment =require('moment')\r",
							"const today=moment()\r",
							"console.log(today.format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.add(5,'d').add(3,'M').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkIn\",today.add(5,'d').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkOut\",today.add(5,'d').add(2,'M').format(\"YYYY-MM-DD\"))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// var jsonData=pm.response.json()\r",
							"\r",
							"// pm.environment.set(\"id\",jsonData.bookingid)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstName}}\",\r\n    \"lastname\": \"{{lastName}}\",\r\n    \"totalprice\": {{totalprice}},\r\n    \"depositpaid\": {{depositpaid}},\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkIn}}\",\r\n        \"checkout\": \"{{checkOut}}\"\r\n    },\r\n    \"additionalneeds\": \"{{additionalneeds}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BookingViewUpdate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statuaCode=pm.response.code\r",
							"console.log(statuaCode)\r",
							"\r",
							"switch(statuaCode){\r",
							"    case 200:\r",
							"    var jsonData=pm.response.json()\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"first name\",function(){\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"lastname\",function(){\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"\r",
							"pm.test(\"totalprice validation\",function(){\r",
							"\r",
							"  pm.expect(jsonData.totalprice).to.eql(parseInt(pm.environment.get(\"totalprice\")))\r",
							"})\r",
							"\r",
							"pm.test(\"depositpaid\",function(){\r",
							"    pm.expect(String(jsonData.depositpaid)).to.eql(pm.environment.get(\"depositpaid\"))\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"bookingdates validation\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkIn\"))\r",
							"})\r",
							"pm.test(\"bookingdates validation\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkOut\"))\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"additionalneeds validation\",function(){\r",
							"    pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalneeds\"))\r",
							"})\r",
							"break\r",
							"case 404:\r",
							"\r",
							"    pm.test(\"Not found any update\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Request",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}